# Step 1: Install the Transformers library (only once)
!pip install transformers

# Step 2: Import required libraries
from transformers import AutoModelForCausalLM, AutoTokenizer
import torch

# Step 3: Load the pre-trained conversational model and tokenizer
tokenizer = AutoTokenizer.from_pretrained("microsoft/DialoGPT-small")
model = AutoModelForCausalLM.from_pretrained("microsoft/DialoGPT-small")

# Set the pad token to be the same as the EOS token
tokenizer.pad_token = tokenizer.eos_token

# Step 4: Initialize conversation history
chat_history_ids = None

# Step 5: Welcome message
print("ðŸ¤– Chatbot is ready! Type 'exit' to quit.\n")

# Step 6: Loop for user interaction
while True:
    user_input = input("You: ")

    if user_input.lower() in ["exit", "quit"]:
        print("Bot: Goodbye! ðŸ‘‹")
        break

    # Encode the new user input and add the eos_token
    new_input_ids = tokenizer.encode(user_input + tokenizer.eos_token, return_tensors='pt')

    # Append the new user input tokens to the chat history
    if chat_history_ids is not None:
        bot_input_ids = torch.cat([chat_history_ids, new_input_ids], dim=-1)
    else:
        bot_input_ids = new_input_ids

    # Generate a response
    chat_history_ids = model.generate(
        bot_input_ids,
        max_length=1000, # Increased max_length for longer conversations
        pad_token_id=tokenizer.eos_token_id # Use eos_token_id for padding
    )

    # Decode the last response from the model
    response = tokenizer.decode(chat_history_ids[:, bot_input_ids.shape[-1]:][0], skip_special_tokens=True)
    print("Bot:", response)
